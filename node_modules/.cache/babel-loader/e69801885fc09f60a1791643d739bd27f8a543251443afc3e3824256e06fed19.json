{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fasih\\\\OneDrive\\\\Desktop\\\\FreeWILLLTD\\\\freewill-website\\\\src\\\\components\\\\CachedImage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CachedImage = ({\n  src,\n  alt,\n  className = '',\n  style = {},\n  loading = 'lazy'\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [cachedSrc, setCachedSrc] = useState(null);\n  const imgRef = useRef(null);\n\n  // Check if image is already cached\n  useEffect(() => {\n    const checkCache = () => {\n      const img = new Image();\n      img.onload = () => {\n        setCachedSrc(src);\n        setIsLoaded(true);\n      };\n      img.onerror = () => {\n        setHasError(true);\n      };\n      img.src = src;\n    };\n\n    // Check browser cache first\n    if ('caches' in window) {\n      caches.open('images-v1').then(cache => {\n        cache.match(src).then(response => {\n          if (response) {\n            setCachedSrc(src);\n            setIsLoaded(true);\n          } else {\n            checkCache();\n          }\n        });\n      });\n    } else {\n      checkCache();\n    }\n  }, [src]);\n\n  // Cache the image when it loads\n  const handleLoad = () => {\n    setIsLoaded(true);\n\n    // Store in browser cache\n    if ('caches' in window) {\n      caches.open('images-v1').then(cache => {\n        fetch(src).then(response => {\n          cache.put(src, response);\n        });\n      });\n    }\n  };\n  const handleError = () => {\n    setHasError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cached-image-container ${className}`,\n    style: style,\n    children: [!isLoaded && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-loading-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: cachedSrc || src,\n      alt: alt,\n      className: `cached-image ${isLoaded ? 'loaded' : 'loading'}`,\n      onLoad: handleLoad,\n      onError: handleError,\n      loading: loading,\n      decoding: \"async\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: \"Failed to load image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CachedImage, \"C5MyBeODhQwvgfdZ4WGK4l/HfYo=\");\n_c = CachedImage;\nexport default CachedImage;\nvar _c;\n$RefreshReg$(_c, \"CachedImage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CachedImage","src","alt","className","style","loading","_s","isLoaded","setIsLoaded","hasError","setHasError","cachedSrc","setCachedSrc","imgRef","checkCache","img","Image","onload","onerror","window","caches","open","then","cache","match","response","handleLoad","fetch","put","handleError","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onLoad","onError","decoding","_c","$RefreshReg$"],"sources":["C:/Users/fasih/OneDrive/Desktop/FreeWILLLTD/freewill-website/src/components/CachedImage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\ninterface CachedImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  loading?: 'lazy' | 'eager';\r\n}\r\n\r\nconst CachedImage: React.FC<CachedImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = '',\r\n  style = {},\r\n  loading = 'lazy'\r\n}) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [cachedSrc, setCachedSrc] = useState<string | null>(null);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n\r\n  // Check if image is already cached\r\n  useEffect(() => {\r\n    const checkCache = () => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setCachedSrc(src);\r\n        setIsLoaded(true);\r\n      };\r\n      img.onerror = () => {\r\n        setHasError(true);\r\n      };\r\n      img.src = src;\r\n    };\r\n\r\n    // Check browser cache first\r\n    if ('caches' in window) {\r\n      caches.open('images-v1').then(cache => {\r\n        cache.match(src).then(response => {\r\n          if (response) {\r\n            setCachedSrc(src);\r\n            setIsLoaded(true);\r\n          } else {\r\n            checkCache();\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      checkCache();\r\n    }\r\n  }, [src]);\r\n\r\n  // Cache the image when it loads\r\n  const handleLoad = () => {\r\n    setIsLoaded(true);\r\n    \r\n    // Store in browser cache\r\n    if ('caches' in window) {\r\n      caches.open('images-v1').then(cache => {\r\n        fetch(src).then(response => {\r\n          cache.put(src, response);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleError = () => {\r\n    setHasError(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`cached-image-container ${className}`} style={style}>\r\n      {!isLoaded && !hasError && (\r\n        <div className=\"image-loading-placeholder\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n      \r\n      {isLoaded && (\r\n        <img\r\n          ref={imgRef}\r\n          src={cachedSrc || src}\r\n          alt={alt}\r\n          className={`cached-image ${isLoaded ? 'loaded' : 'loading'}`}\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          loading={loading}\r\n          decoding=\"async\"\r\n        />\r\n      )}\r\n      \r\n      {hasError && (\r\n        <div className=\"image-error\">\r\n          <div className=\"error-content\">Failed to load image</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CachedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}