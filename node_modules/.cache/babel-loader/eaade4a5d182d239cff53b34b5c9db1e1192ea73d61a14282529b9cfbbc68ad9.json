{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fasih\\\\OneDrive\\\\Desktop\\\\FreeWILLLTD\\\\freewill-website\\\\src\\\\components\\\\OptimizedImage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptimizedImage = ({\n  src,\n  alt,\n  className = '',\n  style = {},\n  loading = 'lazy',\n  onLoad,\n  onError\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef(null);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (loading !== 'lazy') {\n      setIsInView(true);\n      return;\n    }\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => observer.disconnect();\n  }, [loading]);\n  const handleLoad = () => {\n    setIsLoaded(true);\n    onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n  };\n  const handleError = () => {\n    setHasError(true);\n    onError === null || onError === void 0 ? void 0 : onError();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: imgRef,\n    className: `optimized-image-container ${className}`,\n    style: style,\n    children: [!isInView && loading === 'lazy' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-content\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: alt,\n      className: `optimized-image ${isLoaded ? 'loaded' : 'loading'} ${hasError ? 'error' : ''}`,\n      onLoad: handleLoad,\n      onError: handleError,\n      loading: loading,\n      decoding: \"async\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: \"Failed to load image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizedImage, \"uVwRbv/xhgdONDwWRLxGtSoiVgY=\");\n_c = OptimizedImage;\nexport default OptimizedImage;\nvar _c;\n$RefreshReg$(_c, \"OptimizedImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","OptimizedImage","src","alt","className","style","loading","onLoad","onError","_s","isLoaded","setIsLoaded","hasError","setHasError","isInView","setIsInView","imgRef","observer","IntersectionObserver","entry","isIntersecting","disconnect","threshold","current","observe","handleLoad","handleError","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","decoding","_c","$RefreshReg$"],"sources":["C:/Users/fasih/OneDrive/Desktop/FreeWILLLTD/freewill-website/src/components/OptimizedImage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface OptimizedImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  loading?: 'lazy' | 'eager';\r\n  onLoad?: () => void;\r\n  onError?: () => void;\r\n}\r\n\r\nconst OptimizedImage: React.FC<OptimizedImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = '',\r\n  style = {},\r\n  loading = 'lazy',\r\n  onLoad,\r\n  onError\r\n}) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [isInView, setIsInView] = useState(false);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n\r\n  // Intersection Observer for lazy loading\r\n  useEffect(() => {\r\n    if (loading !== 'lazy') {\r\n      setIsInView(true);\r\n      return;\r\n    }\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsInView(true);\r\n          observer.disconnect();\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (imgRef.current) {\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [loading]);\r\n\r\n  const handleLoad = () => {\r\n    setIsLoaded(true);\r\n    onLoad?.();\r\n  };\r\n\r\n  const handleError = () => {\r\n    setHasError(true);\r\n    onError?.();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={imgRef}\r\n      className={`optimized-image-container ${className}`}\r\n      style={style}\r\n    >\r\n      {!isInView && loading === 'lazy' && (\r\n        <div className=\"image-placeholder\">\r\n          <div className=\"placeholder-content\">Loading...</div>\r\n        </div>\r\n      )}\r\n      \r\n      {isInView && (\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          className={`optimized-image ${isLoaded ? 'loaded' : 'loading'} ${hasError ? 'error' : ''}`}\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          loading={loading}\r\n          decoding=\"async\"\r\n        />\r\n      )}\r\n      \r\n      {hasError && (\r\n        <div className=\"image-error\">\r\n          <div className=\"error-content\">Failed to load image</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizedImage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}